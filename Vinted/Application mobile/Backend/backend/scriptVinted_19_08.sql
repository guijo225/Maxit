-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.article
(
    id_article integer NOT NULL,
    nom_article character varying COLLATE pg_catalog."default",
    description_article text COLLATE pg_catalog."default",
    prix_article numeric,
    etat_article character varying COLLATE pg_catalog."default",
    stock numeric,
    statut_ajout_article character varying COLLATE pg_catalog."default",
    negocie boolean,
    vendu boolean,
    reserve boolean,
    taille numeric,
    marque character varying COLLATE pg_catalog."default",
    code_article character varying COLLATE pg_catalog."default",
    id_utilisateur integer,
    id_sous_categorie integer,
    date_creation timestamp without time zone,
    date_derniere_modif timestamp without time zone,
    CONSTRAINT article_pkey PRIMARY KEY (id_article),
    CONSTRAINT article_code_article_key UNIQUE (code_article)
);

CREATE TABLE IF NOT EXISTS public.article_commande
(
    id integer NOT NULL,
    id_article integer,
    id_commande integer,
    quantite_commandee integer,
    date_commande timestamp without time zone,
    CONSTRAINT article_commande_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categorie
(
    id_categorie integer NOT NULL,
    intutile character varying COLLATE pg_catalog."default",
    description character varying COLLATE pg_catalog."default",
    libelle text COLLATE pg_catalog."default",
    CONSTRAINT categorie_pkey PRIMARY KEY (id_categorie)
);

CREATE TABLE IF NOT EXISTS public.commande
(
    id_commande integer NOT NULL,
    code_commande character varying COLLATE pg_catalog."default",
    statut_commande character varying COLLATE pg_catalog."default",
    details text COLLATE pg_catalog."default",
    montant_total numeric,
    statut_paiement character varying COLLATE pg_catalog."default",
    id_utilisateur integer,
    CONSTRAINT commande_pkey PRIMARY KEY (id_commande)
);

CREATE TABLE IF NOT EXISTS public.couleur
(
    id_couleur integer NOT NULL,
    type_couleur character varying COLLATE pg_catalog."default",
    apercu character varying COLLATE pg_catalog."default",
    nom_couleur character varying COLLATE pg_catalog."default",
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT couleur_pkey PRIMARY KEY (id_couleur)
);

CREATE TABLE IF NOT EXISTS public.couleur_article
(
    id integer NOT NULL,
    id_article integer,
    id_couleur integer,
    nb_couleurs integer,
    CONSTRAINT couleur_article_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.livraison
(
    id_livraison integer NOT NULL,
    code_livraison character varying COLLATE pg_catalog."default",
    adresse_acheteur character varying COLLATE pg_catalog."default",
    contact_acheteur integer,
    adresse_vendeur character varying COLLATE pg_catalog."default",
    contact_vendeur integer,
    description_commande text COLLATE pg_catalog."default",
    statut_livraison character varying COLLATE pg_catalog."default",
    contact_livreur integer,
    id_commande integer,
    date_livraison timestamp without time zone,
    CONSTRAINT livraison_pkey PRIMARY KEY (id_livraison),
    CONSTRAINT livraison_code_vraison_key UNIQUE (code_livraison)
);

CREATE TABLE IF NOT EXISTS public.message
(
    id_message integer NOT NULL,
    contenu text COLLATE pg_catalog."default",
    date_envoi timestamp without time zone,
    lu boolean,
    type_message character varying COLLATE pg_catalog."default",
    id_utilisateur integer,
    id_article integer,
    id_utilisateur1 integer,
    date_reception timestamp without time zone,
    CONSTRAINT message_pkey PRIMARY KEY (id_message)
);

CREATE TABLE IF NOT EXISTS public.photo_article
(
    id_photo_article integer NOT NULL,
    url_photo character varying COLLATE pg_catalog."default",
    ordre_affichage integer,
    principale boolean,
    id_article integer,
    CONSTRAINT photo_article_pkey PRIMARY KEY (id_photo_article)
);

CREATE TABLE IF NOT EXISTS public.sous_categorie
(
    id_sous_categorie integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    designation character varying COLLATE pg_catalog."default",
    description_sous_categorie character varying COLLATE pg_catalog."default",
    id_categorie integer,
    CONSTRAINT sous_categorie_pkey PRIMARY KEY (id_sous_categorie)
);

CREATE TABLE IF NOT EXISTS public.transaction
(
    id_transaction integer NOT NULL,
    numero_transaction character varying COLLATE pg_catalog."default",
    moyen_paiement character varying COLLATE pg_catalog."default",
    contact integer,
    statut_transaction character varying COLLATE pg_catalog."default",
    id_utilisateur integer,
    id_commande integer,
    CONSTRAINT transaction_pkey PRIMARY KEY (id_transaction),
    CONSTRAINT transaction_numero_transaction_key UNIQUE (numero_transaction)
);

CREATE TABLE IF NOT EXISTS public.panier
(
    id_panier integer NOT NULL,
    nombre_article integer,
	prix_panier numeric,
    id_utilisateur integer,
    id_article integer,
    CONSTRAINT panier_pkey PRIMARY KEY (id_panier)
);

CREATE TABLE IF NOT EXISTS public.utilisateur
(
    id_utilisateur integer NOT NULL,
    pseudo character varying(30) COLLATE pg_catalog."default",
    nom character varying(50) COLLATE pg_catalog."default",
    prenom character varying(255) COLLATE pg_catalog."default",
    contact integer,
    adresse character varying(255) COLLATE pg_catalog."default",
    maxit_id character varying(50) COLLATE pg_catalog."default",
    photo character varying(100) COLLATE pg_catalog."default",
    note_moyenne integer,
    compte_de_confiance boolean,
    date_derniere_connexion timestamp without time zone,
    CONSTRAINT utilisateur_pkey PRIMARY KEY (id_utilisateur)
);

ALTER TABLE IF EXISTS public.article
    ADD CONSTRAINT id_sous_categorie FOREIGN KEY (id_sous_categorie)
    REFERENCES public.sous_categorie (id_sous_categorie) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.article
    ADD CONSTRAINT id_utilisateur FOREIGN KEY (id_utilisateur)
    REFERENCES public.utilisateur (id_utilisateur) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.article_commande
    ADD CONSTRAINT article_commande_id_article_fkey FOREIGN KEY (id_article)
    REFERENCES public.article (id_article) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.article_commande
    ADD CONSTRAINT article_commande_id_commande_fkey FOREIGN KEY (id_commande)
    REFERENCES public.commande (id_commande) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.commande
    ADD CONSTRAINT id_utilisateur FOREIGN KEY (id_utilisateur)
    REFERENCES public.utilisateur (id_utilisateur) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.couleur_article
    ADD CONSTRAINT couleur_article_id_article_fkey FOREIGN KEY (id_article)
    REFERENCES public.article (id_article) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.couleur_article
    ADD CONSTRAINT couleur_article_id_couleur_fkey FOREIGN KEY (id_couleur)
    REFERENCES public.couleur (id_couleur) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.livraison
    ADD CONSTRAINT id_commande FOREIGN KEY (id_commande)
    REFERENCES public.commande (id_commande) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.message
    ADD CONSTRAINT id_article FOREIGN KEY (id_article)
    REFERENCES public.article (id_article) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.message
    ADD CONSTRAINT id_utilisateur FOREIGN KEY (id_utilisateur)
    REFERENCES public.utilisateur (id_utilisateur) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.message
    ADD CONSTRAINT id_utilisateur1 FOREIGN KEY (id_utilisateur1)
    REFERENCES public.utilisateur (id_utilisateur) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.photo_article
    ADD CONSTRAINT id_article FOREIGN KEY (id_article)
    REFERENCES public.article (id_article) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sous_categorie
    ADD CONSTRAINT id_categorie FOREIGN KEY (id_categorie)
    REFERENCES public.categorie (id_categorie) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT id_commande FOREIGN KEY (id_commande)
    REFERENCES public.commande (id_commande) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transaction
    ADD CONSTRAINT id_utilisateur FOREIGN KEY (id_utilisateur)
    REFERENCES public.utilisateur (id_utilisateur) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;